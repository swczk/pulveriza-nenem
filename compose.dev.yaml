services:
  postgres:
    image: postgres:15-alpine
    container_name: spray-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tacdb}
      POSTGRES_USER: ${POSTGRES_USER:-tacdb_owner}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-npg_lUXQNZzx2J1d}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - spray-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tacdb_owner} -d ${POSTGRES_DB:-tacdb}"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:7.0
    container_name: spray-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-pulverizacao}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - spray-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  spring-api:
    build:
      context: ./backend-spring
      dockerfile: Dockerfile
    container_name: spray-spring-api
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-tacdb}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-tacdb_owner}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-npg_lUXQNZzx2J1d}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      AWS_COGNITO_REGION: ${AWS_COGNITO_REGION:-sa-east-1}
      AWS_COGNITO_URL: ${AWS_COGNITO_URL:-https://cognito-idp.sa-east-1.amazonaws.com}
      AWS_COGNITO_USER_POOL_ID: ${AWS_COGNITO_USER_POOL_ID:-sa-east-1_SUUgsSLnt}
      AWS_COGNITO_CLIENT_ID: ${AWS_COGNITO_CLIENT_ID:-p0e4cic354t817u87oom27gmb}
      AWS_COGNITO_CLIENT_SECRET: ${AWS_COGNITO_CLIENT_SECRET:-apesadp9o80quqci1u9c9dnvj868021r44v6k9d0v000nv4va3r}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spray-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  graphql-api:
    build:
      context: ./backend-graphql
      dockerfile: Dockerfile
    container_name: spray-graphql-api
    environment:
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017
      MONGO_DATABASE: ${MONGO_DATABASE:-pulverizacao}
      PORT: 8080
    ports:
      - "8081:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - spray-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: spray-frontend
    ports:
      - "3000:80"
    depends_on:
      spring-api:
        condition: service_healthy
      graphql-api:
        condition: service_healthy
    networks:
      - spray-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  adminer:
    image: adminer:4.8.1
    container_name: spray-adminer
    ports:
      - "8082:8080"
    networks:
      - spray-network
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  mongo-express:
    image: mongo-express:1.0.0
    container_name: spray-mongo-express
    ports:
      - "8083:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD:-pass}
    depends_on:
      - mongodb
    networks:
      - spray-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  spray-network:
    driver: bridge
