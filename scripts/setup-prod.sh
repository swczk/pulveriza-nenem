#!/bin/bash

# Script para configurar o ambiente de produ√ß√£o
# Uso: ./scripts/setup-prod.sh

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
cd "$PROJECT_ROOT"

echo "üöÄ Configurando ambiente de produ√ß√£o..."
echo ""

# Verificar se .env.prod j√° existe
if [ -f ".env.prod" ]; then
    echo "‚ö†Ô∏è  Arquivo .env.prod j√° existe!"
    read -p "Deseja sobrescrever? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Opera√ß√£o cancelada."
        exit 1
    fi
fi

# Copiar arquivo de exemplo
echo "üìã Copiando .env.prod.example para .env.prod..."
cp .env.prod.example .env.prod

echo "‚úÖ Arquivo .env.prod criado!"
echo ""
echo "üîß Pr√≥ximos passos:"
echo "1. Edite o arquivo .env.prod com suas configura√ß√µes:"
echo "   nano .env.prod"
echo ""
echo "2. Configure as seguintes vari√°veis obrigat√≥rias:"
echo "   - DATABASE_URL (PostgreSQL para Spring Boot)"
echo "   - MONGO_PASSWORD (Senha do MongoDB container)"
echo "   - DATABASE_NAME (Nome do banco MongoDB)"
echo "   - Configura√ß√µes AWS Cognito (se usando)"
echo ""
echo "3. Execute o deploy:"
echo "   docker compose -f compose.prod.yaml --env-file .env.prod up -d"
echo ""
echo "üìñ Veja docker-commands.md para mais detalhes."